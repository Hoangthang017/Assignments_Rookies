@using ECommerce.Models.Request.Products
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@model ProductVM
@{
    ViewData["Title"] = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var totalRating = @Model.GetTotalRating();
    int orderQuantity = 1;
}

<!-- product information -->
<section class="ftco-section">
    <div class="container">
        <div class="row">
            <!-- slide show -->
            <div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
                <div class="carousel-inner" style="width: 540px; height: 432px;">
                    <div class="carousel-item active" >
                        <img class="d-block" style="width: 540px; height: 432px;" src="@Model.ProductViewModel.imagePaths[0]" alt="@Model.ProductViewModel.Name">
                    </div>
                    @for(int i =1; i < Model.ProductViewModel.imagePaths.Count(); i++)
                    {
                    <div class="carousel-item">
                        <img class="d-block" style="width: 540px; height: 432px;" src="@Model.ProductViewModel.imagePaths[i]" alt="@Model.ProductViewModel.Name">
                    </div>
                    }
                </div>
                <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
            <div class="col-lg-6 product-details pl-md-5 ftco-animate">
                <h3>@Model.ProductViewModel.Name</h3>
                <!--total rating -->
                <div class="rating d-flex">
                    <p class="text-left mr-4">
                        <a class="mr-2" style="font-size: 20px;">@totalRating.ToString(".0#")</a>
                    </p>
                    <div>
                        @for (var i = 1; i <= (int)totalRating; i++)
                        {
                        <span class="starGlowN"></span>
                        }
                        @for (var i = ((int)@totalRating + 1); i <= 5; i++)
                        {
                        <span class="starFadeN"></span>
                        }
                    </div>
                    <p class="text-left mr-4" style="margin-left: 5%;">
                        <a class="mr-2" style="color: #000; font-size: 20px;">@Model.ProductReviewViewModels.Count() <span style="color: #bbb;">Rating</span></a>
                    </p>
                    @*  <p class="text-left">
                        <a href="#" class="mr-2" style="color: #000;">500 <span style="color: #bbb;">Sold</span></a>
                        </p>*@
                </div>
                <p class="price"><span>$@Model.ProductViewModel.Price</span></p>
                <p>
                    @Model.ProductViewModel.Details
                </p>
                <div class="row mt-4">
                    <div class="w-100"></div>
                    <div class="input-group col-md-6 d-flex mb-3">
                        <span class="input-group-btn mr-2">
                            <button type="button" class="quantity-left-minus btn" data-type="minus" data-field="">
                                <i class="ion-ios-remove"></i>
                            </button>
                        </span>
                        <input type="text" id="quantity" name="quantity" class="form-control input-number input-order-quantity" value=@orderQuantity min="1" max="100">
                        <span class="input-group-btn ml-2">
                            <button type="button" class="quantity-right-plus btn" data-type="plus" data-field="">
                                <i class="ion-ios-add"></i>
                            </button>
                        </span>
                    </div>
                    <div class="w-100"></div>
                    <div class="col-md-12">
                        <p style="color: #000;"><span class="product-stock-availale">@Model.ProductViewModel.Stock</span> kg available</p>
                    </div>
                </div>
                <p><a class="btn btn-infor py-3 px-5 btn-add-to-card-productDetail" data-productId=@Model.ProductViewModel.Id>Add to Cart</a></p>
            </div>
        </div>
    </div>
</section>

<hr class="dropdown-divider" style="margin: 0 20%">

<!-- review -->
<section>
    <section class="ftco-section testimony-section">
        <div class="container">
            <div class="row justify-content-center mb-5 pb-3">
                <div class="col-md-7 heading-section ftco-animate text-center">
                    <span class="subheading">Testimony</span>
                    <h2 class="mb-4">Our satisfied customer says</h2>
                    <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in</p>
                </div>
            </div>
            <div class="row ftco-animate">
                <div class="col-md-12">
                    <div class="carousel-testimony owl-carousel">
                        @foreach(var review in Model.ProductReviewViewModels)
                        {
                        <div class="item">
                            <div class="testimony-wrap p-4 pb-5">
                                <div class="user-img mb-5" style="background-image: url(@review.customerAvatar)">
                                    <span class="quote d-flex align-items-center justify-content-center">
                                        <i class="icon-quote-left"></i>
                                    </span>
                                </div>
                                <div style="margin-left: 25%; margin-bottom: 10%;">
                                    @for (var i = 1; i <= (int)@review.Rating; i++)
                                    {
                                    <span class="starGlowN"></span>
                                    }
                                    @for (var i = ((int)@review.Rating + 1); i <= 5; i++)
                                    {
                                    <span class="starFadeN"></span>
                                    }
                                </div>
                                <div class="text text-center">
                                    <p class="mb-5 pl-4 line">@review.Comment</p>
                                    <p class="name">@(string.IsNullOrEmpty(review.CustomerName) ?  review.CustomerUsername : review.CustomerName)</p>
                                </div>
                            </div>
                        </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
    @if(string.IsNullOrEmpty(HttpContextAccessor.HttpContext.Session.GetString("token")))
    {
    <div class="alert alert-warning" role="alert" style="margin: 0 10%">
        Please <a href="/login">login</a> to leave your product review.
        <hr />
        If you don't have an account, please <a href="/register">register</a> in here!!!
    </div>
    }
    else{
        @await Html.PartialAsync("_CommentBox", new CreateProductReviewRequest())
    }
</section>
<!-- end -->
<!-- related products -->
<section class="ftco-section">
    <div class="container">
        <div class="row justify-content-center mb-3 pb-3">
            <div class="col-md-12 heading-section text-center ftco-animate">
                <span class="subheading">Products</span>
                <h2 class="mb-4">Related Products</h2>
                <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia</p>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            @foreach (var relatedProduct in @Model.RelatedProducts)
            {
            @await Html.PartialAsync("_ProductCard", relatedProduct)
            }
        </div>
    </div>
</section>
